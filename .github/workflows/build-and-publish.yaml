name: Build and publish nightly
on:
  push:
    branches:
      - 'ngdevkit'
jobs:
  linux:
    name: "Linux build"
    runs-on: ubuntu-latest
    env:
      BUILD_PARAMS: ""
      PREFIX: "/tmp/build/linux"
      PKGDATADIR: "$PREFIX/share/ngdevkit-gngeo"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo add-apt-repository -y ppa:dciabrin/ngdevkit
          sudo apt-get update -y
          sudo apt-get install -y emudbg-dev autoconf-archive libsdl2-dev libglew-dev
      - name: Build
        run: ./.github/scripts/build.sh

  wincross:
    name: "Windows cross-compiled Linux/MinGW"
    runs-on: ubuntu-latest
    env:
      BUILD_PARAMS: "--host=x86_64-w64-mingw32 --enable-mingw"
      PREFIX: "/tmp/build/mingw"
      PKGDATADIR: "$PREFIX/share"
      WINDEPS: "/tmp/deps"
      SDL: "https://www.libsdl.org/release/SDL2-devel-2.0.8-mingw.tar.gz"
      GLEW: "https://downloads.sourceforge.net/project/glew/glew/2.1.0/glew-2.1.0-win32.zip"
      NSIS_SDL2: "http://libsdl.org/release/SDL2-2.0.10-win32-x64.zip"
      NSIS_GLEW: "http://downloads.sourceforge.net/project/glew/glew/2.1.0/glew-2.1.0-win32.zip"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dependencies
        run: |
          sudo add-apt-repository -y ppa:dciabrin/ngdevkit
          sudo apt-get update -y
          sudo apt-get install -y emudbg-dev autoconf-archive libsdl2-dev libglew-dev
          sudo apt-get install mingw-w64 libz-mingw-w64-dev emudbg-mingw-w64-dev nsis

      - name: Build
        run: |
          ./.github/scripts/build-mingw.sh
          cp /tmp/build/mingw/setup-ngdevkit-gngeo-nightly.exe* .

      - name: Upload NSIS installer
        uses: actions/upload-artifact@v2
        with:
          name: nsis-artifact
          path: |
            setup-ngdevkit-gngeo-nightly.exe
            setup-ngdevkit-gngeo-nightly.exe.sha256

  win:
    name: "Windows native MSYS2 build"
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install:
            git autoconf autoconf-archive automake make
            mingw-w64-x86_64-gcc mingw-w64-x86_64-libtool
            mingw-w64-x86_64-pkg-config mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-glew

      - name: Install ngdevkit dependencies
        run: |
          echo -e "[ngdevkit]\nSigLevel = Optional TrustAll\nServer = https://dciabrin.net/msys2-ngdevkit/\$arch" >> /etc/pacman.conf
          pacman -Sy
          pacman -S --noconfirm mingw-w64-x86_64-emudbg

      - name: Build
        run: ./.github/scripts/build-msys2.sh

  macos:
    name: "macOS build"
    runs-on: macos-latest
    env:
      BUILD_PARAMS: ""
      PREFIX: "/tmp/build/macos"
      PKGDATADIR: "$PREFIX/share/ngdevkit-gngeo"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          brew tap dciabrin/ngdevkit
          brew install emudbg automake autoconf-archive sdl2 glew

      - name: Build
        run: ./.github/scripts/build.sh


  deploy_deb:
    name: "deb: trigger Launchpad rebuild"
    runs-on: ubuntu-latest
    needs: [linux, wincross, win, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Launchpad: trigger nightly deb rebuild"
        run: .ci/trigger-launchpad-build.sh --slug="~dciabrin/ngdevkit/+git/gngeo" --name="Travis%20Deploy"
        env:
          LAUNCHPAD_TOKEN: ${{ secrets.LAUNCHPAD_TOKEN }}
          LAUNCHPAD_TOKEN_SECRET: ${{ secrets.LAUNCHPAD_TOKEN_SECRET }}

  deploy_rpm:
    name: "rpm: trigger COPR rebuild"
    needs: [linux, wincross, win, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "COPR: push new nightly revision"
        run:  |
          git config --global user.name 'CI build bot'
          git config --global user.email '<>'
          git config --global url."https://api@github.com/".insteadOf "https://github.com/"
          git clone https://github.com/dciabrin/copr-ngdevkit .ci/copr-ngdevkit
          .ci/copr-ngdevkit/.ci/bump-project-nightly-build.sh ngdevkit-gngeo
          .ci/copr-ngdevkit/.ci/trigger-copr-build.sh --package ngdevkit-gngeo
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          COPR_SECRET: ${{ secrets.COPR_SECRET }}
          LAUNCHPAD_TOKEN: ${{ secrets.LAUNCHPAD_TOKEN }}
          LAUNCHPAD_TOKEN_SECRET: ${{ secrets.LAUNCHPAD_TOKEN_SECRET }}

  deploy_brew:
    name: "brew: trigger bottle rebuild"
    runs-on: ubuntu-latest
    needs: [linux, wincross, win, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Brew: push new nightly revision and bottle"
        run: |
          git config --global user.name 'CI build bot'
          git config --global user.email '<>'
          git config --global url."https://api@github.com/".insteadOf "https://github.com/"
          git clone https://github.com/dciabrin/homebrew-ngdevkit .ci/homebrew-ngdevkit
          .ci/homebrew-ngdevkit/.ci/bump-project-nightly-build.sh ngdevkit-gngeo ngdevkit
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  deploy_nsis:
    name: "win: publish NSIS installer"
    runs-on: ubuntu-latest
    needs: [linux, wincross, win, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: nsis-artifact

      - name: Retrieve information from current commit
        id: nsis_data
        run: |
          echo "::set-output name=tag::$(TZ=UTC git show --quiet --date='format-local:%Y%m%d%H%M' --format='nightly-%ad')"
          echo "::set-output name=date::$(TZ=UTC git show --quiet --date='format-local:%Y-%m-%d %H:%M' --format='%ad')"
          echo "::set-output name=body::$(git show --quiet --format='%s')"

      - name: Create nightly NSIS installer release
        id: nsis_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.nsis_data.outputs.tag }}
          release_name: Nightly build - ${{ steps.nsis_data.outputs.date }}
          body: Nightly build ${{ steps.nsis_data.outputs.body }}
          draft: false
          prerelease: true

      - name: Upload nightly NSIS installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.nsis_release.outputs.upload_url }}
          asset_path: setup-ngdevkit-gngeo-nightly.exe
          asset_name: setup-ngdevkit-gngeo-nightly.exe
          asset_content_type: application/vnd.microsoft.portable-executable

      - name: Upload nightly NSIS installer SHA256
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.nsis_release.outputs.upload_url }}
          asset_path: setup-ngdevkit-gngeo-nightly.exe.sha256
          asset_name: setup-ngdevkit-gngeo-nightly.exe.sha256
          asset_content_type: text/plain

  deploy_msys2:
    name: "msys2: trigger package rebuild"
    needs: [linux, wincross, win, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "MSYS2: push new nightly revision and rebuild package repository"
        run: |
          git config --global user.name 'CI build bot'
          git config --global user.email '<>'
          git config --global url."https://api@github.com/".insteadOf "https://github.com/"
          git clone https://github.com/dciabrin/msys2-ngdevkit .ci/msys2-ngdevkit
          .ci/msys2-ngdevkit/.ci/bump-project-nightly-build.sh ngdevkit-gngeo ngdevkit
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  cleanup_tags:
    name: "Cleanup tags and artefacts"
    runs-on: ubuntu-latest
    needs: [deploy_deb, deploy_rpm, deploy_brew, deploy_nsis, deploy_msys2]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Cleanup old nightly tags and releases"
        run: .ci/github-gc.sh --user=dciabrin --repo=gngeo --tag-regex='^nightly-[0-9]*'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
